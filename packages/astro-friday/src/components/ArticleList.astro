---
import type { CollectionEntry } from '../types/content'
import dayjs from 'dayjs'
import config from 'virtual:astro-friday-config'
import { formatDate } from '../utils/date'
import { getPath } from '../utils/path'
import ArticleLangs from './ArticleLangs.astro'

interface Props {
  entryList: CollectionEntry[]
}

const { entryList } = Astro.props

/**
 * Group entries by year
 *
 * {2023: [entry1, entry2], 2022: [entry3, entry4]}
 *
 * Use Map to keep the order of years
 */
const groupedByYear = entryList.reduce((acc, entry) => {
  const fKeys = config.post.frontmatterKeys

  const year = dayjs(entry.data[fKeys.created]).year()
  if (!acc.has(year)) {
    acc.set(year, [])
  }
  acc.get(year)!.push(entry)
  return acc
}, new Map<number, typeof entryList>())
---

{
  entryList.length === 0
    ? (
        <div class="live-area py2 op-50" is:raw>
          { nothing here yet }
        </div>
      )
    : Array.from(groupedByYear).map(([year, entries]) => (
        <section class="live-area mb-10">
          <div
            class="h-20 pointer-events-none select-none relative"
          >
            <span
              class="text-8em color-transparent font-bold text-stroke-2 text-stroke-hex-aaa op-10 left--3rem top--2rem absolute"
            >{year}</span>
          </div>

          <ul class="">
            {entries.map((entry) => {
              const fKeys = config.post.frontmatterKeys

              return (
                <li class="mb-6 mt-2 relative">
                  <ArticleLangs
                    {entry}
                    class="absolute z-1 xl:(translate-x-[calc(-100%-1em)] left-0) lt-xl:(bottom-0 right-0)"
                    availableCurrent
                    hides={[
                      config.post.lang.collapse
                        ? Object.keys(entry.data[fKeys.langs]).length > 1
                          ? []
                          : [entry.data[fKeys.lang]]
                        : entry.data[fKeys.lang] === config.post.lang.default
                          ? Object.keys(entry.data[fKeys.langs])
                          : Object.keys(entry.data[fKeys.langs]).filter(i => i !== entry.data[fKeys.lang]),
                    ].flat()}
                    max={3}
                  />

                  <a
                    class="text-lg leading-1.2em hoverable-text flex flex-col gap-2 md:(flex-row flex-items-center)"
                    href={getPath(
                      'post',
                      config.post.pathStyle === 'collection/id'
                        ? [entry.collection, entry.id]
                        : [entry.id],
                    )}
                  >
                    {
                      config.viewTransition.enable
                        ? <span class="text-#000 dark:text-#fff" transition:name={`post:${entry.id}`}>{entry.data[fKeys.title]}</span>
                        : <span class="text-#000 dark:text-#fff">{entry.data[fKeys.title]}</span>
                    }

                    <div class="flex gap-2 items-center">
                      <span class="text-sm ws-nowrap">
                        { formatDate(entry.data[fKeys.modified] || entry.data[fKeys.created], true) }
                      </span>

                      <span
                        class="tag-zinc500 flex-none"
                      >{entry.collection}</span>
                    </div>
                  </a>
                </li>
              )
            })}
          </ul>
        </section>
      ))
}

